Search.setIndex({"alltitles": {"Compressing data": [[10, "compressing-data"]], "Contents:": [[6, null]], "Decompressing data": [[3, "decompressing-data"], [10, "decompressing-data"]], "Indices and tables": [[6, "indices-and-tables"]], "Requirements": [[8, null], [10, "requirements"]], "Translating from ROOT to numpy an uncompressed database and vice versa": [[10, "translating-from-root-to-numpy-an-uncompressed-database-and-vice-versa"]], "Usage": [[10, null]], "Welcome to NormFlow compression\u2019s documentation!": [[6, null]], "compare.py": [[0, null]], "compression_comparator.py": [[1, null]], "compressor.py": [[2, null]], "decompressor.py": [[3, null]], "eigen.py": [[4, null]], "float_compressor.py": [[5, null]], "neural_network.py": [[7, null]], "traducers.py": [[9, null]]}, "docnames": ["compare", "compression_comparator", "compressor", "decompressor", "eigen", "float_compressor", "index", "neural_network", "requirements", "traducers", "usage"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["compare.rst", "compression_comparator.rst", "compressor.rst", "decompressor.rst", "eigen.rst", "float_compressor.rst", "index.rst", "neural_network.rst", "requirements.rst", "traducers.rst", "usage.rst"], "indexentries": {}, "objects": {"": [[10, 0, 1, "", "DataCompressor"], [10, 0, 1, "", "DataDecompressor"], [10, 0, 1, "", "NumpyToRoot"], [10, 0, 1, "", "RootToNumpy"]], "traducers": [[10, 1, 1, "", "ArrayDimensionError"]]}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:function", "1": "py:exception"}, "terms": {"0": [2, 3, 10], "1": [2, 3, 10], "15": [9, 10], "2": [9, 10], "20": [2, 3, 9, 10], "3": [8, 10], "5": [9, 10], "It": 5, "The": [9, 10], "To": [8, 10], "abov": 5, "after": [2, 3, 5, 10], "algorithm": [2, 5, 10], "alt_data_compressor": 5, "altern": 5, "an": [2, 3, 9], "appli": [2, 3, 10], "ar": [2, 3, 10], "arrai": [2, 3, 9, 10], "arraydimensionerror": [6, 9, 10], "back": 5, "befor": [2, 3, 10], "bin": [2, 3, 10], "bin_data_compressor": 5, "binari": 5, "bit": 5, "bitarrai": 5, "branch": [9, 10], "call": [9, 10], "compar": [5, 6], "compress": [2, 3, 5, 8], "compression_compar": 6, "compressor": [5, 6], "contain": [2, 3, 5, 9, 10], "convert": [2, 3, 9, 10], "correct": [9, 10], "cumul": [2, 10], "cut": 5, "data": [2, 5, 6, 9], "datacompressor": [2, 3, 6, 10], "datadecompressor": [3, 10], "dataset": 5, "decompress": 6, "decompressor": 6, "default": [2, 3, 10], "describ": 5, "distribut": [2, 3, 10], "divid": [2, 10], "doe": [2, 3, 5, 10], "doubl": [9, 10], "eigen": 6, "element": [2, 3, 5, 9, 10], "equal": [2, 10], "erf": 8, "erfinv": 8, "except": [9, 10], "exist": [2, 3, 5, 10], "expect": [9, 10], "extens": [9, 10], "file": [2, 3, 5, 9, 10], "final": 5, "first": [2, 10], "float": 5, "float_compressor": 6, "flow": 5, "fname": [2, 3, 5, 10], "follow": [8, 9, 10], "format": [2, 3, 10], "fpzip": 5, "from": [2, 8], "function": [2, 5, 10], "gaussian": [2, 3, 10], "ha": [9, 10], "have": [9, 10], "i": [2, 3, 9, 10], "imag": [2, 3, 10], "img": [2, 3, 10], "import": [8, 10], "index": 6, "input": [9, 10], "insid": [9, 10], "int": [2, 3, 5, 10], "integ": [2, 10], "interv": [2, 10], "invers": [3, 10], "involv": 5, "latter": [2, 10], "long": [2, 10], "lossi": [2, 3, 10], "made": [9, 10], "make": 5, "mantissa": 5, "matplotlib": [8, 10], "matrix": [9, 10], "method": 5, "modul": 6, "myarrai": [9, 10], "n_bin": [2, 3, 10], "n_bit": [2, 3, 10], "name": [2, 3, 5, 9, 10], "ndarrai": [9, 10], "need": [8, 10], "network": 5, "neural": 5, "neural_network": 6, "normal": [2, 5, 10], "normflow": [8, 10], "number": [2, 3, 5, 10], "numpi": [2, 3, 8, 9], "numpytoroot": [6, 9, 10], "o": [8, 10], "one": 5, "onli": [8, 10], "origin": [3, 10], "oserror": [2, 3, 5, 10], "otherwis": [9, 10], "output": [9, 10], "packag": [8, 10], "page": 6, "paramet": [2, 3, 5, 9, 10], "part": 5, "possibl": 5, "previous": 5, "produc": [2, 3, 10], "py": 6, "pyplot": [8, 10], "python": [8, 10], "rais": [2, 3, 5, 9, 10], "reconvert": [3, 10], "requir": 6, "respect": 5, "return": [2, 3, 9, 10], "right": [9, 10], "root": [8, 9], "roottonumpi": [6, 9, 10], "run": [8, 10], "save": 5, "savefil": 5, "scipi": 8, "search": 6, "sequenc": [9, 10], "shape": [2, 3, 9, 10], "should": [9, 10], "size": [9, 10], "sourc": [2, 3, 10], "special": 8, "step": [2, 3, 10], "store": 5, "str": [2, 3, 5, 9, 10], "sy": [8, 10], "take": [2, 3, 9, 10], "tensorflow": [8, 10], "tensorflow_prob": [8, 10], "test": [8, 10], "them": [2, 5, 10], "through": [2, 10], "traduc": [6, 10], "transform": 5, "tree": [9, 10], "treenam": [9, 10], "turn": 5, "txt": [2, 3, 10], "type": [2, 3, 9, 10], "uniform": [2, 10], "us": [3, 5, 8, 10], "valu": [2, 10], "variou": [2, 3, 10], "vector": [9, 10], "want": [2, 10], "where": 5, "without": [9, 10], "you": [8, 10], "zero": 5}, "titles": ["compare.py", "compression_comparator.py", "compressor.py", "decompressor.py", "eigen.py", "float_compressor.py", "Welcome to NormFlow compression\u2019s documentation!", "neural_network.py", "Requirements", "traducers.py", "Usage"], "titleterms": {"": 6, "an": 10, "compar": 0, "compress": [6, 10], "compression_compar": 1, "compressor": 2, "content": 6, "data": [3, 10], "databas": 10, "decompress": [3, 10], "decompressor": 3, "document": 6, "eigen": 4, "float_compressor": 5, "from": 10, "indic": 6, "neural_network": 7, "normflow": 6, "numpi": 10, "py": [0, 1, 2, 3, 4, 5, 7, 9], "requir": [8, 10], "root": 10, "tabl": 6, "traduc": 9, "translat": 10, "uncompress": 10, "usag": 10, "versa": 10, "vice": 10, "welcom": 6}})
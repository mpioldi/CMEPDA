Search.setIndex({"alltitles": {"Compressing data": [[10, "compressing-data"]], "Contents:": [[6, null]], "Decompressing data": [[10, "decompressing-data"]], "Indices and tables": [[6, "indices-and-tables"]], "Requirements": [[8, null], [10, "requirements"]], "Translating from ROOT to numpy an uncompressed database and vice versa": [[10, "translating-from-root-to-numpy-an-uncompressed-database-and-vice-versa"]], "Usage": [[10, null]], "Welcome to NormFlow compression\u2019s documentation!": [[6, null]], "compare.py": [[0, null]], "compression_comparator.py": [[1, null]], "compressor.py": [[2, null]], "decompressor.py": [[3, null]], "eigen.py": [[4, null]], "float_compressor.py": [[5, null]], "neural_network.py": [[7, null]], "traducers.py": [[9, null]]}, "docnames": ["compare", "compression_comparator", "compressor", "decompressor", "eigen", "float_compressor", "index", "neural_network", "requirements", "traducers", "usage"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["compare.rst", "compression_comparator.rst", "compressor.rst", "decompressor.rst", "eigen.rst", "float_compressor.rst", "index.rst", "neural_network.rst", "requirements.rst", "traducers.rst", "usage.rst"], "indexentries": {"built-in function": [[7, "coupling", false]], "coupling()": [[7, "coupling", false]], "realnvp (built-in class)": [[7, "RealNVP", false]]}, "objects": {"": [[9, 0, 1, "", "NumpyToRoot"], [7, 1, 1, "", "RealNVP"], [9, 0, 1, "", "RootToNumpy"], [5, 0, 1, "", "alt_data_compressor"], [5, 0, 1, "", "bin_data_compressor"], [7, 0, 1, "", "coupling"], [2, 0, 1, "", "data_compressor"], [3, 0, 1, "", "data_decompressor"]], "traducers": [[9, 2, 1, "", "ArrayDimensionError"]]}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "class", "Python class"], "2": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:function", "1": "py:class", "2": "py:exception"}, "terms": {"": 7, "0": [2, 3, 10], "1": [2, 3, 7, 10], "100": [0, 4], "15": [7, 9, 10], "2": [1, 9, 10], "20": [2, 3, 9, 10], "2048": [2, 3], "3": [8, 10], "5": [9, 10], "5x5": 7, "At": 7, "It": [0, 1, 4, 5, 7], "The": [1, 2, 3, 7, 9, 10], "There": 7, "To": [7, 8, 10], "abov": 5, "after": [0, 1, 2, 3, 5, 7, 10], "algorithm": [2, 5, 7, 10], "all": [0, 4, 7], "alt_data_compressor": [1, 5, 6], "altern": 5, "an": [2, 3, 7, 9], "appli": [2, 3, 10], "ar": [2, 3, 7, 10], "arrai": [2, 3, 9, 10], "arraydimensionerror": [6, 9, 10], "back": 5, "befor": [2, 3, 10], "between": [1, 7], "bin": [2, 3, 10], "bin_data_compressor": [1, 5, 6], "binari": 5, "bit": 5, "bitarrai": 5, "bool": 7, "branch": [7, 9, 10], "calcul": 4, "call": [2, 3, 9, 10], "can": [2, 7], "cascad": 7, "chang": 7, "class": 7, "commit": [0, 4], "compar": [5, 6], "compr_data": [2, 3], "compress": [0, 1, 2, 3, 5, 8], "compression_compar": 6, "compressor": [0, 1, 4, 5, 6], "contain": [1, 2, 3, 5, 7, 9, 10], "convert": [2, 3, 7, 9, 10], "coordin": 7, "correct": [9, 10], "coupl": [6, 7], "cumul": [2, 10], "cut": [1, 5], "data": [0, 1, 2, 3, 4, 5, 7, 9], "data_compressor": [1, 2, 3, 6], "data_decompressor": [3, 6], "datacompressor": 10, "datadecompressor": 10, "dataset": [0, 4, 5], "decompr_data": 3, "decompress": [0, 3], "decompressor": [0, 1, 4, 6], "default": [2, 3, 10], "depend": [0, 4, 7], "describ": 5, "destin": [2, 3], "determin": 7, "differ": 1, "distribut": [0, 2, 3, 4, 7, 10], "divid": [2, 10], "doe": [2, 3, 5, 10], "doubl": [9, 10], "eigen": 6, "eigenvalu": 4, "element": [2, 3, 5, 9, 10], "end": 7, "equal": [2, 10], "erf": 8, "erfinv": 8, "error": [0, 4], "evalu": [0, 4], "even": 7, "except": [9, 10], "execut": 2, "exist": [2, 3, 5, 10], "expect": [9, 10], "experiment": 1, "extens": [9, 10], "file": [1, 2, 3, 5, 7, 9, 10], "fill": [2, 3], "final": [1, 5, 7], "find": 7, "first": [1, 2, 10], "float": 5, "float_compressor": [1, 6], "flow": [5, 7], "fname": [2, 3, 5, 10], "folder": [2, 3, 7], "follow": [8, 9, 10], "format": [2, 3, 10], "fpzip": 5, "from": [2, 3, 7, 8], "function": [1, 2, 5, 7, 10], "further": 7, "futur": 7, "gaussian": [2, 3, 7, 10], "gener": 7, "ha": [7, 9, 10], "have": [0, 4, 9, 10], "histogram": [0, 4], "i": [1, 2, 3, 7, 9, 10], "imag": [2, 3, 10], "img": [2, 3, 10], "import": [2, 3, 8, 10], "inaccuraci": 1, "index": 6, "initi": 7, "input": [9, 10], "input_shap": 7, "insid": [9, 10], "int": [2, 3, 5, 10], "integ": [2, 10], "interv": [2, 10], "invers": [3, 10], "invert": 7, "involv": 5, "jacobian": 7, "just": 7, "kera": 7, "latter": [2, 10], "layer": 7, "layers_numb": [2, 3], "learn": 7, "least": 7, "likelihood": 7, "load": 7, "loadtxt": [0, 4], "loadweight": 7, "log": 7, "long": [2, 10], "loss": 7, "lossi": [2, 3, 10], "machin": 7, "made": [9, 10], "main": [2, 3, 7], "make": 5, "mantissa": 5, "matplotlib": [8, 10], "matric": 7, "matrix": [9, 10], "mean": [2, 3], "meansfilenam": [2, 3], "method": [1, 2, 3, 5], "model": 7, "modifi": 7, "modul": 6, "myarrai": [9, 10], "n_bin": [2, 3, 10], "n_bit": [2, 3, 10], "n_cut": 1, "name": [2, 3, 5, 9, 10], "ndarrai": [9, 10], "necessari": 7, "need": [2, 3, 7, 8, 10], "network": [5, 7], "neural": [5, 7], "neural_network": [2, 3, 6], "normal": [2, 5, 7, 10], "normflow": [8, 10], "np": [0, 4], "num_coupling_lay": 7, "number": [2, 3, 5, 7, 10], "numpi": [2, 3, 8, 9], "numpytoroot": [6, 9, 10], "o": [8, 10], "obtain": 2, "onc": 7, "one": [1, 5], "onli": [8, 10], "option": 7, "origin": [1, 3, 7, 10], "oserror": [2, 3, 5, 10], "other": 1, "otherwis": [9, 10], "output": [9, 10], "packag": [8, 10], "page": 6, "paramet": [1, 2, 3, 5, 7, 9, 10], "part": 5, "plot": [0, 1, 4, 7], "possibl": 5, "present": 7, "previous": 5, "produc": [2, 3, 10], "py": 6, "pyplot": [8, 10], "python": [8, 10], "rais": [2, 3, 5, 9, 10], "realnvp": [2, 3, 6, 7], "realvpn": 7, "reconvert": [3, 10], "rel": [0, 4], "requir": [0, 2, 3, 4, 6], "respect": 5, "result": [2, 3], "return": [2, 3, 7, 9, 10], "right": [9, 10], "root": [8, 9], "roottonumpi": [6, 9, 10], "rtype": 3, "run": [0, 4, 7, 8, 10], "save": [2, 3, 5, 7], "savefil": 5, "saveweight": 7, "scipi": 8, "search": 6, "second": 1, "select": 7, "sequenc": [9, 10], "shape": [2, 3, 9, 10], "should": [9, 10], "show": [0, 4], "size": [1, 9, 10], "sourc": [2, 3, 10], "special": 8, "split": 7, "step": [2, 3, 10], "store": 5, "str": [2, 3, 5, 9, 10], "subset": [0, 4], "sum": 7, "sy": [8, 10], "symmetr": 7, "t": 7, "take": [2, 3, 9, 10], "tensorflow": [8, 10], "tensorflow_prob": [8, 10], "test": [8, 10], "thei": [], "them": [2, 5, 7, 10], "thi": 7, "through": [2, 10], "traduc": [6, 10], "train": 7, "trainmodel": 7, "transform": [5, 7], "tree": [9, 10], "treenam": [9, 10], "turn": 5, "two": 7, "txt": [0, 2, 3, 4, 10], "type": [1, 2, 3, 9, 10], "uniform": [2, 10], "upload": [0, 4], "us": [1, 3, 5, 7, 8, 10], "valu": [1, 2, 10], "variou": [2, 3, 10], "vector": [9, 10], "wai": 1, "want": [2, 10], "weight": [2, 3, 7], "where": 5, "which": 7, "while": 7, "without": [7, 9, 10], "you": [8, 10], "zero": 5}, "titles": ["compare.py", "compression_comparator.py", "compressor.py", "decompressor.py", "eigen.py", "float_compressor.py", "Welcome to NormFlow compression\u2019s documentation!", "neural_network.py", "Requirements", "traducers.py", "Usage"], "titleterms": {"": 6, "an": 10, "compar": 0, "compress": [6, 10], "compression_compar": 1, "compressor": 2, "content": 6, "data": 10, "databas": 10, "decompress": 10, "decompressor": 3, "document": 6, "eigen": 4, "float_compressor": 5, "from": 10, "indic": 6, "neural_network": 7, "normflow": 6, "numpi": 10, "py": [0, 1, 2, 3, 4, 5, 7, 9], "requir": [8, 10], "root": 10, "tabl": 6, "traduc": 9, "translat": 10, "uncompress": 10, "usag": 10, "versa": 10, "vice": 10, "welcom": 6}})